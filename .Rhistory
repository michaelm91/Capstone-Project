mutate(incident_time = 60 * incident_hour + incident_minute) %>%
ggplot() +
stat_count(aes(x = incident_time), fill = single_color) +
scale_x_continuous(
name = "Time",
breaks = seq.int(from = 0, to = 24 * 60, by = 120),
labels = paste0(seq.int(from = 0, to = 24, by = 2), ":00")
) +
ggtitle("Crashes Involving Alcohol by Time of Day") +
basic_theme
incidents %>%
filter(driver_substance_abuse_alcohol_present | driver_substance_abuse_alcohol_contributed) %>%
select(incident_weekday) %>%
ggplot() +
stat_count(aes(x = incident_weekday), fill = single_color) +
scale_x_continuous(
name = "Day of Week",
breaks = 1:7,
labels = c("Sunday", "Monday", "Tuesday", "Wednesday", "Thurday", "Friday", "Saturday")
) +
ggtitle("Crashes Involving Alcohol by Day of Week") +
basic_theme
skimr::skim_to_wide(drivers) %>% DT::datatable()
ordered_levels <- drivers %>%
count(injury_severity) %>%
arrange(desc(n)) %>%
pull(injury_severity)
drivers %>%
mutate(`Injury Severity` = factor(injury_severity, ordered_levels)) %>%
ggplot() +
stat_count(aes(x = `Injury Severity`), fill = single_color) +
ggtitle("Severity of Driver Injuries") +
basic_theme
drivers %>%
count(injury_severity) %>%
arrange(n) %>%
knitr::kable()
ordered_levels <- drivers %>%
count(vehicle_damage_extent) %>%
arrange(desc(n)) %>%
pull(vehicle_damage_extent)
drivers %>%
mutate(`Vehicle Damage` = factor(vehicle_damage_extent, ordered_levels)) %>%
ggplot() +
stat_count(aes(x = `Vehicle Damage`), fill = single_color) +
ggtitle("Severity of Vehicle Damage") +
basic_theme
drivers %>%
count(vehicle_damage_extent) %>%
arrange(desc(n)) %>%
knitr::kable()
drivers %>%
ggplot() +
stat_count(aes(x = speed_limit, fill = ), fill = single_color) +
ggtitle("Speed Limits") +
basic_theme
ordered_injury <- drivers %>%
count(injury_severity) %>%
arrange(desc(n)) %>%
pull(injury_severity)
drivers %>%
mutate(
`Speed Limit` = factor(c("LOW", "MEDIUM", "HIGH")[1 + findInterval(speed_limit, c(31, 46))], levels = c("LOW", "MEDIUM", "HIGH")),
`Injury Severity` = factor(injury_severity, ordered_injury)
) %>%
ggplot() +
stat_count(aes(x = `Injury Severity`, fill = `Speed Limit`)) +
basic_theme +
theme(legend.position = c(.9, .9)) +
ggtitle("Injuries and Speed Limits")
ordered_levels <- drivers %>%
count(vehicle_body_type) %>%
arrange(desc(n)) %>%
pull(vehicle_body_type)
drivers %>%
mutate(`Body Type` = factor(as.character(fct_collapse(vehicle_body_type, OTHER = ordered_levels[-(1:5)])), c(ordered_levels[1:5], "OTHER"))) %>%
ggplot() +
stat_count(aes(x = `Body Type`), fill = single_color) +
ggtitle("Vehicle Body Types") +
basic_theme
skimr::skim_to_wide(non_motorists) %>% DT::datatable()
ordered_levels <- non_motorists %>%
count(pedestrian_type) %>%
arrange(desc(n)) %>%
pull(pedestrian_type)
non_motorists %>%
mutate(pedestrian_type = factor(pedestrian_type, ordered_levels)) %>%
ggplot() +
stat_count(aes(x = pedestrian_type), fill = single_color) +
basic_theme +
ggtitle("Types of Non-Motorists")
pal <- colorFactor(c("blue", "red"), domain = c(0, 1))
non_motorists %>%
leaflet() %>%
addTiles() %>%
addCircleMarkers(lng = ~longitude, lat = ~latitude, radius = 3, stroke = TRUE, weight = 2, opacity = 1, color = ~ pal(not_in_county))
ordered_levels <- non_motorists %>%
count(injury_severity) %>%
arrange(desc(n)) %>%
pull(injury_severity)
non_motorists %>%
mutate(`Injury Severity` = factor(injury_severity, ordered_levels)) %>%
ggplot() +
stat_count(aes(x = `Injury Severity`), fill = single_color) +
ggtitle("Severity of Non Motorist Injuries") +
basic_theme
non_motorists %>%
count(injury_severity) %>%
arrange(n) %>%
knitr::kable()
ordered_levels <- non_motorists %>%
filter(pedestrian_type == "BICYCLIST") %>%
count(safety_equipment) %>%
arrange(desc(n)) %>%
pull(safety_equipment)
non_motorists %>%
filter(pedestrian_type == "BICYCLIST") %>%
mutate(`Safety Equipment` = factor(safety_equipment, ordered_levels)) %>%
ggplot() +
stat_count(aes(x = `Safety Equipment`), fill = single_color) +
basic_theme +
ggtitle("What Kinds of Safety Equiptment Do Bicyclists Use?")
ordered_safety <- non_motorists %>%
filter(pedestrian_type == "BICYCLIST") %>%
count(safety_equipment) %>%
arrange(desc(n)) %>%
pull(safety_equipment)
ordered_injury <- non_motorists %>%
filter(pedestrian_type == "BICYCLIST") %>%
count(injury_severity) %>%
arrange(desc(n)) %>%
pull(injury_severity)
non_motorists %>%
filter(pedestrian_type == "BICYCLIST") %>%
mutate(
`Safety Equipment` = fct_collapse(safety_equipment, OTHER = ordered_safety[-(1:2)]),
`Injury Severity` = factor(injury_severity, ordered_injury)
) %>%
ggplot() +
stat_count(aes(x = `Injury Severity`, fill = `Safety Equipment`)) +
basic_theme +
theme(legend.position = c(.9, .9)) +
ggtitle("Injuries and Helmets")
fatal_drivers<-drivers %>% filter(injury_severity_fatal_injury) %>% pull(report_number)
fatal_drivers<-drivers %>% filter(injury_severity_fatal_injury == 1) %>% pull(report_number)
fatal_nonm <- non_motorists %>% filter(injury_severity_fatal_injury == 1) %>% pull(report_number)
fatal_drivers
fatal_nonm
incidents %>%
select(incident_hour, incident_minute) %>%
mutate(incident_time = 60 * incident_hour + incident_minute) %>%
ggplot() +
stat_count(aes(x = incident_time), fill = single_color) +
scale_x_continuous(
name = "Time",
breaks = seq.int(from = 0, to = 24 * 60, by = 120),
labels = c(paste0(seq.int(from = 0, to = 22, by = 2), ":00"),"0:00")
) +
ggtitle("Crashes by Time of Day") +
basic_theme
fatal_drivers<-drivers %>% filter(injury_severity_fatal_injury == 1) %>% pull(report_number)
fatal_nonm <- non_motorists %>% filter(injury_severity_fatal_injury == 1) %>% pull(report_number)
fatal_drivers<-drivers %>% filter(injury_severity_fatal_injury == 1) %>% pull(report_number)
fatal_nonm <- non_motorists %>% filter(injury_severity_fatal_injury == 1) %>% pull(report_number)
fatal_acrs <- incidents %>% filter(acrs_report_type_fatal_crash == 1) %>% pull(report_number)
recorded_fatal <- c(fatal_drivers, fatal_nonm)
fatal_drivers<-drivers %>% filter(injury_severity_fatal_injury == 1) %>% pull(report_number)
fatal_nonm <- non_motorists %>% filter(injury_severity_fatal_injury == 1) %>% pull(report_number)
fatal_acrs <- incidents %>% filter(acrs_report_type_fatal_crash == 1) %>% pull(report_number)
recorded_fatal <- c(fatal_drivers, fatal_nonm)
fatal_acrs %in% recorded_fatal
fatal_drivers<-drivers %>% filter(injury_severity_fatal_injury == 1) %>% pull(report_number)
fatal_nonm <- non_motorists %>% filter(injury_severity_fatal_injury == 1) %>% pull(report_number)
fatal_acrs <- incidents %>% filter(acrs_report_type_fatal_crash == 1) %>% pull(report_number)
recorded_fatal <- c(fatal_drivers, fatal_nonm)
fatal_acrs %>% .[!. %in% recorded_fatal]
incidents %>% filter(report_number %in% probs) %>% DT::datatable()
fatal_drivers<-drivers %>% filter(injury_severity_fatal_injury == 1) %>% pull(report_number)
fatal_nonm <- non_motorists %>% filter(injury_severity_fatal_injury == 1) %>% pull(report_number)
fatal_acrs <- incidents %>% filter(acrs_report_type_fatal_crash == 1) %>% pull(report_number)
recorded_fatal <- c(fatal_drivers, fatal_nonm)
# vector of fatal reports with no recorded fatality
probs <- fatal_acrs %>% .[!. %in% recorded_fatal]
incidents %>% filter(report_number %in% probs) %>% DT::datatable()
knitr::opts_chunk$set(echo = TRUE, fig.width = 12, fig.height = 6, tidy = "styler", df.print = "kable")
library(tidyverse)
library(lubridate)
library(leaflet)
incidents <- feather::read_feather("incidents.feather")
drivers <- feather::read_feather("drivers.feather")
non_motorists <- feather::read_feather("non_motorists.feather")
single_color <- "#3182bd"
basic_theme <- theme(
plot.title = element_text(size = 24, vjust = .5, hjust = .5),
axis.title = element_text(size = 16, hjust = .5, vjust = .5),
panel.background = element_rect(fill = "white"),
legend.position = "none",
panel.grid.major.y = element_line(color = "grey75", size = .1, linetype = "solid")
)
skimr::skim_to_wide(incidents) %>% DT::datatable()
incidents %>%
group_by(acrs_report_type) %>%
count() %>%
knitr::kable()
pal <- colorFactor(c("blue", "red"), domain = c(0, 1))
incidents %>%
leaflet() %>%
addTiles() %>%
addCircleMarkers(lng = ~longitude, lat = ~latitude, radius = 3, stroke = TRUE, weight = 2, opacity = 1, color = ~ pal(not_in_county))
incidents %>%
select(incident_hour, incident_minute) %>%
mutate(incident_time = 60 * incident_hour + incident_minute) %>%
ggplot() +
stat_count(aes(x = incident_time), fill = single_color) +
scale_x_continuous(
name = "Time",
breaks = seq.int(from = 0, to = 24 * 60, by = 120),
labels = c(paste0(seq.int(from = 0, to = 22, by = 2), ":00"),"0:00")
) +
ggtitle("Crashes by Time of Day") +
basic_theme
incidents %>%
select(incident_weekday) %>%
ggplot() +
stat_count(aes(x = incident_weekday), fill = single_color) +
scale_x_continuous(
name = "Day of Week",
breaks = 1:7,
labels = c("Sunday", "Monday", "Tuesday", "Wednesday", "Thurday", "Friday", "Saturday")
) +
ggtitle("Crashes by Day of Week") +
basic_theme
incidents %>%
select(incident_year) %>%
ggplot() +
stat_count(aes(x = incident_year), fill = single_color) +
ggtitle("Crashes by Year") +
basic_theme
incidents %>%
filter(incident_year < 2019) %>%
select(incident_month, incident_day) %>%
mutate(incident_date = paste0(incident_month, "/", incident_day)) %>%
count(incident_date) %>%
arrange(desc(n)) %>%
rename(Date = incident_date, `Number of Crashes` = n) %>%
DT::datatable()
incidents %>%
group_by(weather) %>%
count() %>%
arrange(desc(n)) %>%
knitr::kable()
incidents %>%
mutate(alcohol = driver_substance_abuse_alcohol_present | driver_substance_abuse_alcohol_contributed) %>%
count(alcohol) %>%
knitr::kable()
incidents %>%
count(driver_substance_abuse_alcohol_contributed) %>%
knitr::kable()
incidents %>%
count(driver_substance_abuse_alcohol_present) %>%
knitr::kable()
incidents %>%
mutate(illegal_drug = driver_substance_abuse_illegal_drug_present | driver_substance_abuse_illegal_drug_contributed) %>%
count(illegal_drug) %>%
knitr::kable()
incidents %>%
count(driver_substance_abuse_illegal_drug_contributed) %>%
knitr::kable()
incidents %>%
count(driver_substance_abuse_illegal_drug_present) %>%
knitr::kable()
incidents %>%
filter(driver_substance_abuse_alcohol_present | driver_substance_abuse_alcohol_contributed) %>%
select(incident_hour, incident_minute) %>%
mutate(incident_time = 60 * incident_hour + incident_minute) %>%
ggplot() +
stat_count(aes(x = incident_time), fill = single_color) +
scale_x_continuous(
name = "Time",
breaks = seq.int(from = 0, to = 24 * 60, by = 120),
labels = paste0(seq.int(from = 0, to = 24, by = 2), ":00")
) +
ggtitle("Crashes Involving Alcohol by Time of Day") +
basic_theme
incidents %>%
filter(driver_substance_abuse_alcohol_present | driver_substance_abuse_alcohol_contributed) %>%
select(incident_weekday) %>%
ggplot() +
stat_count(aes(x = incident_weekday), fill = single_color) +
scale_x_continuous(
name = "Day of Week",
breaks = 1:7,
labels = c("Sunday", "Monday", "Tuesday", "Wednesday", "Thurday", "Friday", "Saturday")
) +
ggtitle("Crashes Involving Alcohol by Day of Week") +
basic_theme
skimr::skim_to_wide(drivers) %>% DT::datatable()
ordered_levels <- drivers %>%
count(injury_severity) %>%
arrange(desc(n)) %>%
pull(injury_severity)
drivers %>%
mutate(`Injury Severity` = factor(injury_severity, ordered_levels)) %>%
ggplot() +
stat_count(aes(x = `Injury Severity`), fill = single_color) +
ggtitle("Severity of Driver Injuries") +
basic_theme
drivers %>%
count(injury_severity) %>%
arrange(n) %>%
knitr::kable()
ordered_levels <- drivers %>%
count(vehicle_damage_extent) %>%
arrange(desc(n)) %>%
pull(vehicle_damage_extent)
drivers %>%
mutate(`Vehicle Damage` = factor(vehicle_damage_extent, ordered_levels)) %>%
ggplot() +
stat_count(aes(x = `Vehicle Damage`), fill = single_color) +
ggtitle("Severity of Vehicle Damage") +
basic_theme
drivers %>%
count(vehicle_damage_extent) %>%
arrange(desc(n)) %>%
knitr::kable()
drivers %>%
ggplot() +
stat_count(aes(x = speed_limit, fill = ), fill = single_color) +
ggtitle("Speed Limits") +
basic_theme
ordered_injury <- drivers %>%
count(injury_severity) %>%
arrange(desc(n)) %>%
pull(injury_severity)
drivers %>%
mutate(
`Speed Limit` = factor(c("LOW", "MEDIUM", "HIGH")[1 + findInterval(speed_limit, c(31, 46))], levels = c("LOW", "MEDIUM", "HIGH")),
`Injury Severity` = factor(injury_severity, ordered_injury)
) %>%
ggplot() +
stat_count(aes(x = `Injury Severity`, fill = `Speed Limit`)) +
basic_theme +
theme(legend.position = c(.9, .9)) +
ggtitle("Injuries and Speed Limits")
ordered_levels <- drivers %>%
count(vehicle_body_type) %>%
arrange(desc(n)) %>%
pull(vehicle_body_type)
drivers %>%
mutate(`Body Type` = factor(as.character(fct_collapse(vehicle_body_type, OTHER = ordered_levels[-(1:5)])), c(ordered_levels[1:5], "OTHER"))) %>%
ggplot() +
stat_count(aes(x = `Body Type`), fill = single_color) +
ggtitle("Vehicle Body Types") +
basic_theme
skimr::skim_to_wide(non_motorists) %>% DT::datatable()
ordered_levels <- non_motorists %>%
count(pedestrian_type) %>%
arrange(desc(n)) %>%
pull(pedestrian_type)
non_motorists %>%
mutate(pedestrian_type = factor(pedestrian_type, ordered_levels)) %>%
ggplot() +
stat_count(aes(x = pedestrian_type), fill = single_color) +
basic_theme +
ggtitle("Types of Non-Motorists")
pal <- colorFactor(c("blue", "red"), domain = c(0, 1))
non_motorists %>%
leaflet() %>%
addTiles() %>%
addCircleMarkers(lng = ~longitude, lat = ~latitude, radius = 3, stroke = TRUE, weight = 2, opacity = 1, color = ~ pal(not_in_county))
ordered_levels <- non_motorists %>%
count(injury_severity) %>%
arrange(desc(n)) %>%
pull(injury_severity)
non_motorists %>%
mutate(`Injury Severity` = factor(injury_severity, ordered_levels)) %>%
ggplot() +
stat_count(aes(x = `Injury Severity`), fill = single_color) +
ggtitle("Severity of Non Motorist Injuries") +
basic_theme
non_motorists %>%
count(injury_severity) %>%
arrange(n) %>%
knitr::kable()
ordered_levels <- non_motorists %>%
filter(pedestrian_type == "BICYCLIST") %>%
count(safety_equipment) %>%
arrange(desc(n)) %>%
pull(safety_equipment)
non_motorists %>%
filter(pedestrian_type == "BICYCLIST") %>%
mutate(`Safety Equipment` = factor(safety_equipment, ordered_levels)) %>%
ggplot() +
stat_count(aes(x = `Safety Equipment`), fill = single_color) +
basic_theme +
ggtitle("What Kinds of Safety Equiptment Do Bicyclists Use?")
ordered_safety <- non_motorists %>%
filter(pedestrian_type == "BICYCLIST") %>%
count(safety_equipment) %>%
arrange(desc(n)) %>%
pull(safety_equipment)
ordered_injury <- non_motorists %>%
filter(pedestrian_type == "BICYCLIST") %>%
count(injury_severity) %>%
arrange(desc(n)) %>%
pull(injury_severity)
non_motorists %>%
filter(pedestrian_type == "BICYCLIST") %>%
mutate(
`Safety Equipment` = fct_collapse(safety_equipment, OTHER = ordered_safety[-(1:2)]),
`Injury Severity` = factor(injury_severity, ordered_injury)
) %>%
ggplot() +
stat_count(aes(x = `Injury Severity`, fill = `Safety Equipment`)) +
basic_theme +
theme(legend.position = c(.9, .9)) +
ggtitle("Injuries and Helmets")
fatal_drivers<-drivers %>% filter(injury_severity_fatal_injury == 1) %>% pull(report_number)
fatal_nonm <- non_motorists %>% filter(injury_severity_fatal_injury == 1) %>% pull(report_number)
fatal_acrs <- incidents %>% filter(acrs_report_type_fatal_crash == 1) %>% pull(report_number)
recorded_fatal <- c(fatal_drivers, fatal_nonm)
# vector of fatal reports with no recorded fatality
probs <- fatal_acrs %>% .[!. %in% recorded_fatal]
incidents %>% filter(report_number %in% probs) %>% DT::datatable(options = list(pageLength = 5))
drivers %>% filter(report_number %in% probs) %>% DT::datatable(options = list(pageLength = 5))
non_motorists %>% filter(report_number %in% probs) %>% DT::datatable(options = list(pageLength = 5))
drivers %>% group_by(report_number) %>% tally()
drivers %>% group_by(report_number) %>% tally() %>% arrange(desc(n))
non_motorists %>% group_by(report_number) %>% tally() %>% arrange(desc(n))
drivers %>% count(report_number) %>% pull(n) %>% mean(. > 2)
drivers %>% count(report_number) %>% pull(n) %>% (function(x)mean(x>2))
drivers %>% count(report_number) %>% count(n) %>% knitr::kable()
drivers %>% count(report_number) %>% count(n) %>% rename(`Vehicles Involved` = n) %>% knitr::kable()
non_motorists %>% count(report_number) %>% count(n) %>% rename(`Vehicles Involved` = n) %>% knitr::kable()
non_motorists %>% count(report_number) %>% count(n) %>% rename(`non_motorists Involved` = n) %>% knitr::kable()
drivers %>%
mutate(
speed_limit = factor(c("LOW", "MEDIUM", "HIGH")[1 + findInterval(speed_limit, c(31, 46))], levels = c("LOW", "MEDIUM", "HIGH")),
injury_severity = factor(injury_severity, ordered_injury)
) %>%
group_by(speed_limit, injury_severity) %>%
tally()
ordered_injury <- drivers %>%
count(injury_severity) %>%
arrange(desc(n)) %>%
pull(injury_severity)
drivers %>%
mutate(
speed_limit = factor(c("LOW", "MEDIUM", "HIGH")[1 + findInterval(speed_limit, c(31, 46))], levels = c("LOW", "MEDIUM", "HIGH")),
injury_severity = factor(injury_severity, ordered_injury)
) %>%
group_by(speed_limit, injury_severity) %>%
tally() %>%
rename(`Speed Limit` = speed_limit, `Injury Severity` = injury_severity) %>%
ggplot() +
geom_bar(aes(x = `Injury Severity`, weight = n, fill = `Speed Limit`), position = "fill") +
basic_theme +
theme(legend.position = c(.9, .9)) +
ggtitle("Injuries and Speed Limits")
ordered_injury <- drivers %>%
count(injury_severity) %>%
arrange(desc(n)) %>%
pull(injury_severity)
drivers %>%
mutate(
speed_limit = factor(c("LOW", "MEDIUM", "HIGH")[1 + findInterval(speed_limit, c(31, 46))], levels = c("LOW", "MEDIUM", "HIGH")),
injury_severity = factor(injury_severity, ordered_injury)
) %>%
group_by(speed_limit, injury_severity) %>%
tally() %>%
rename(`Speed Limit` = speed_limit, `Injury Severity` = injury_severity) %>%
ggplot() +
geom_bar(aes(x = `Injury Severity`, weight = n, fill = `Speed Limit`), position = "fill") +
basic_theme +
theme(legend.position = "bottom") +
ggtitle("Injuries and Speed Limits")
ordered_injury <- drivers %>%
count(injury_severity) %>%
arrange(desc(n)) %>%
pull(injury_severity)
drivers %>%
mutate(
speed_limit = factor(c("LOW", "MEDIUM", "HIGH")[1 + findInterval(speed_limit, c(31, 46))], levels = c("LOW", "MEDIUM", "HIGH")),
injury_severity = factor(injury_severity, ordered_injury)
) %>%
group_by(speed_limit, injury_severity) %>%
tally() %>%
rename(`Speed Limit` = speed_limit, `Injury Severity` = injury_severity) %>%
ggplot() +
geom_bar(aes(x = `Injury Severity`, weight = n, fill = `Speed Limit`), position = "fill") +
basic_theme +
theme(legend.position = "top") +
ggtitle("Injuries and Speed Limits")
ordered_injury <- drivers %>%
count(injury_severity) %>%
arrange(desc(n)) %>%
pull(injury_severity)
drivers %>%
mutate(
speed_limit = factor(c("LOW", "MEDIUM", "HIGH")[1 + findInterval(speed_limit, c(31, 46))], levels = c("LOW", "MEDIUM", "HIGH")),
injury_severity = factor(injury_severity, ordered_injury)
) %>%
group_by(speed_limit, injury_severity) %>%
tally() %>%
rename(`Speed Limit` = speed_limit, `Injury Severity` = injury_severity) %>%
ggplot() +
geom_bar(aes(x = `Injury Severity`, weight = n, fill = `Speed Limit`), position = "fill") +
basic_theme +
theme(legend.position = "top") +
ggtitle("Injuries and Speed Limits") +
ylab("Proportion")
install.packages(c("hms", "tinytex", "xaringan"))
